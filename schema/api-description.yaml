$schema: http://json-schema.org/draft-04/schema#
title: Panda Sky API Description

type: object
required:
  #- name
  #- version
  - resources
  #- schema
properties:
  name:
    type: string
  version:
    type: string
  resources:
    description: >
      A dictionary of Resource descriptions, keyed by the logical name of the resource.
    type: object
    additionalProperties: {$ref: "#/definitions/resource"}
  schema:
    type: object
    additionalProperties: {$ref: "http://json-schema.org/draft-04/schema#"}

definitions:
  resource:
    type: object
    required:
      - template
      - methods
    properties:
      template:
        description: >
          The optionally templatized URL for a resource.  Sky uses the RFC standard for URI templating, with additional limits.

          For the path section of the URL, use the simple string notation, {...},  to specify a *single* variable name. More complex uses here are disallowed by Gateway.  See https://tools.ietf.org/html/rfc6570#section-3.2.2

          For the querystring section of the URL, you may use the full RFC  notation for querystring templating, {?...}. The Sky API accepts and parses any querystring parameters in Gateway, but will use this template section to validate incoming parameters in the dispatcher code of "panda-sky-helpers". See https://tools.ietf.org/html/rfc6570#section-3.2.8

          Example: "/person/{key}{?age,gender}"
        type: string
        # TODO: Come up with valid and useful regex here.
      methods:
        description: >
          A dictionary of Resource Method descriptions, keyed by the HTTP
          method name (GET, PUT, etc.).
        type: object
        additionalProperties: {$ref: "#/definitions/method"}

  method:
    type: object
    required:
      - signatures
    properties:
      parameterDefinitions:
        description: >
          A place to record documentation for path and querystring parameters in a resource URL template.  This is a single level dictionary where the key is the parameter name and the value is string that describes that parameter.
        type: object
      pragma:
        description: >
          Place to record configurations unrelated to HTTP concerns.
          For example, integration details specific to a particular backend service.
        type: object
      signatures:
        description: >
          A dictionary of "request signatures" to provide more granular dispatching
          than merely to a "resource method handler".
          Keys are arbitrary, but will usually represent the logical name of a
          request handling function.
        type: object
        required:
          - request
          - response
        properties:
          request: {$ref: "#/definitions/request"}
          response: {$ref: "#/definitions/response"}

  request:
    description: >
      Describes the elements of an HTTP request
    type: object
    properties:
      authorization:
        type: boolean
      schema:
        type: object
      mediatype:
        type: array
        items:
          type: string

  response:
    type: object
    required:
      - status
    properties:
      status:
        description: An array of the status codes that indicate success.
        type: array
        items:
          type: integer
          minimum: 200
          maximum: 599
      mediatype:
        type: array
        items:
          type: string
      schema:
        type: object
      cache:
        description: Configuration for the resource-level caching on this endpoint.
        type: object
        required: [maxAge]
        properties:
          maxAge:
            description: The value for the Cache-Control directive max-age.  The time in seconds this resource should be cached.  You may also set this to `manual` and specify your own max-age in the handler.
            anyOf:
              - type: integer
                minimum: 0
                maximum: 31556926
              - type: string
                enum: [ manual ]
          etag:
            description: Flag indicating that this resource should return an ETag header containing an MD5 hash of the utf-8 stringified response.
            type: boolean
          lastModified:
            description: Flag indicating that this resource should return a Last-Modified header containing a timestamp of the last time this resource was believed to be modified, formatted as an HTTP Datetime.
            type: boolean

examples:
  -
    name: Blurb9 API
    version: 0.1.0
    schemas:
      blurb:
        mediaType: "application/vnd.blurb9.blurb+json;version=1"
        type: object
        properties:
          content:
            type: string
          expiration:
            type: string
            format: date-time

    resources:
      blurbs:
        template: /blurbs
        description: "Virtual collection of blurbs"
        methods:
          POST:
            pragma:
              integration:
                timeout: 10 # seconds
            signatures:
              create:
                request:
                  authorization:
                    - PandaGuard
                  mediatype:
                    - "application/vnd.blurb9.blurb+json;version=1"
                response:
                  status: [201]
                  mediatype:
                    - "application/json"
                    - "text/html"

      public_blurbs:
        description: "Publicly viewable blurbs"
        template: /public_blurbs{?title,content,tag}
        methods:
          GET:
            signatures:
              search:
                request: {}
                response:
                  status: [200]
                  mediatype:
                    - "application/vnd.blurb9.blurb_list+json;version=1"
                    - "application/vnd.blurb9.blurb_list+json;version=2"
