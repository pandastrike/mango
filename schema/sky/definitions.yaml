vpc:
  description: >
    A set of configurations that allow your Lambdas access to resources within a VPC.
  type: object
  additionalProperties: false
  properties:
    skipConnectionDraining:
      description: >
        When Lambdas are integrated with a VPC, they for ENIs to reach the resources within.  By default, CloudFormation waits for these connections to be drained before deleting the Lambdas during 'sky delete' and 'sky publish' (update) operations.  While this is sometimes good practice, it takes around 40 minutes to complete.  Setting this value to true ignores connection draining consideraitons and moves to complete the requested operation as quickly as possible.
      type: boolean
    availabilityZones:
      description: >
        To provide robust availability of resources within your VPC, specify two availability zones by listing the letter code.  That letter will be combined with the region specified in the top-level AWS configuration.  You may omit this field if you specify existing configuration.
      type: array
      minItems: 2
      maxItems: 2
      uniqueItems: true
      items:
        type: string
        enum: [a, b, c, d, e, f]

cachePath:
  description: >
    A object containing key-value pairing of a CloudFront distribution path pattern and its corresponding TTL in seconds.  The path may contain glob notation.
  type: object
  additionalProperties: false
  required: [path, ttl]
  properties:
    path:
      description: >
       A CloudFront path pattern. For example, you can specify images/*.jpg.

       CloudFront uses a first-match algorithm, comparing the requested path with path patterns listed in the paths array, in the order in which they are listed.
      type: string
    ttl:
      description: >
        The maximum amount of time, in seconds, that an entity stays
        cached in the edge server before additional requests are forwarded
        to your Gateway API to check for updates.

        Setting this value to 0 gives you a custom domain with TLS
        termination, but no caching. That configuraiton is useful for
        development and staging environments.

        You may also specify a tuple of integers
        [minTTL, maxTTL, defaultTTL]
      anyOf:
        - type: integer
          minimum: 0
          maximum: 3153600000
        - type: array
          minItems: 3
          maxItems: 3
          items:
            type: integer
            minimum: 0
            maximum: 3153600000


partition:
  description: >
  type: object
  properties:
    variables:
      description: >
        A dictionary of variable names to be injected into the environment configuration for this stacks lambdas.  Total size cannot exceed 4kB, and there is already a portion of that taken up by Sky by default.  This dicitonary is not appropriate to store sensitive information (use ASM mixin instead).
      type: object

    mixins:
      description: >
        This is an array of names assigned to Sky mixin configuration declared at the environment level.  Listing names here grants the lamba in this partition permission to relevant resources via the policy exposed in the mixin.
      type: array
      items:
        type: string

    runtime:
      description: >
        The Lambda runtime environment used to run your code. Sky defaults to Node 8.10.
      type: string
      enum:
        - nodejs10.x
        - nodejs8.10

    memorySize:
      description: >
        The Lambda memory allocation in MB.  Larger values also get more network throughput and CPU horsepower, as well as superior cold-start behavior, but the specifics on that are left murky by AWS docs. Minimum value is 128, and it must be specified as multiples of 64.  Sky defaults to 256.
      type: integer
      minimum: 128
      maximum: 3008
      multipleOf: 64

    timeout:
      description: >
        The Lambda timeout limit, in seconds.  Sky defaults to 60.
      type: integer
      minimum: 1
      maximum: 900


environment:
  description: >
    A collection of Cloud resources allocated on your behalf to deploy the
    serverless Sky stack.
  type: object
  required: [ partitions, hostnames ]
  additionalProperties: false
  properties:
    variables:
      description: >
        A dictionary of variable names to be injected into the environment configuration for this stacks lambdas.  Total size cannot exceed 4kB, and there is already a portion of that taken up by Sky by default.  This dicitonary is not appropriate to store sensitive information (use ASM mixin instead).
      type: object

    hostnames:
      description: >
        Name under which sky creates subdomains and publishes your API.
      type: array
      minItems: 1
      maxItems: 1
      uniqueItems: true
      items:
        type: string
        minLength: 1

    vpc: {$ref: "#/definitions/vpc"}

    mixins:
      description: >
        This is a dictionary of Sky mixins.  The keys are the names, and the
        values are the mixin-specific configuration.  The schemas for those
        configurations are held within the mixins themselves.
      type: object

    partitions:
      description: >
        A dictionary of API handler resources that have similar code, resource allocation, and permission needs.
      type: object
      minProperties: 1
      additionalProperties: {$ref: "#/definitions/partition"}

    cache:
      description: >
        Optional configuration for CloudFront to provide caching on the AWS
        global CDN infrastructure, including support for SSL.
      type: object
      additionalProperties: false
      properties:
        httpVersion:
          description:
            Determines the network protocol to serve content to clients. Sky defaults to HTTP/2 because it is newer and more awesome.
          type: string
          enum: [ "http1.1", "http2" ]

        protocol:
          description: >
            Sets the TLS protocol version to use when serving your API over
            HTTPS. Higher versions are not supported by older clients, but they
            leverage more robust cryptography and signalling. Sky defaults to vTLSv1.2_2018.
          type: string
          enum: [ "SSLv3", TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018" ]

        ttl:
          description: >
            The maximum amount of time, in seconds, that an entity stays
            cached in the edge server before additional requests are forwarded
            to your Gateway API to check for updates. Sky defaults to 0.

            Setting this value to 0 gives you a custom domain with TLS
            termination, but no caching. That configuraiton is useful for
            development and staging environments.

            You may also specify a tuple of integers
            [minTTL, maxTTL, defaultTTL]
          anyOf:
            - type: integer
              minimum: 0
              maximum: 3153600000
            - type: array
              minItems: 3
              maxItems: 3
              items:
                type: integer
                minimum: 0
                maximum: 3153600000

        paths:
          description: >
            A set of cache behaviors specified as a dictionary of path patterns and their corresponding TTL, in seconds.  Sky uses the cache.expires field as a global default cache behavior, but this field allows you to set specific rules for parts of your distribution.
          type: array
          minItems: 1
          items: {$ref: "#/definitions/cachePath"}

        priceClass:
          description: >
            Sets the extent to which content is cached on CloudFront edge
            servers.  By limiting to edge servers in cheaper locations
            throughout the world, you can lower your expenses at the cost of
            less coverage.  See https://aws.amazon.com/cloudfront/pricing/ for
            a current description of what comes with each price class.

            Sky defaults to 100, which is cheapest, but comes with the smallest coverage area.
          anyOf:
            - type: string
              enum: [ "100", "200", "All"]
            - type: integer
              multipleOf: 100
              minimum: 100
              maximum: 200

        headers:
          description: >
            This sets the list of headers forwarded and cached by the CloudFront
            distribution. Omitting this field will cause Sky to forward and
            cache the *default* headers.

            The *default* headers are: Accept, Accept-Charset, Accept-Datetime,
            Accept-Language, Access-Control-Request-Headers,
            Access-Control-Request-Method, Authorization, Origin, Referer

            Host is notably absent from those default headers.  When using
            Server Name Indentification in CloudFront, Gateway relies on that
            by default to verify the connection.  The usage of the Host header
            causes Gateway to issue a 403 response, baring special
            configuration.

            You may specify an empty array, [].  In this case Sky will set no
            headers.  This will forward the default headers, BUT NOT CACHE
            BASED ON THEM.

            You may specify a wildcard, [*], which forwards ALL headers.
            But in this case, CloudFront cannot leverage caching nor accept
            additional, specific headers to cache.
          type: array
          items:
            type: string
            minLength: 1

        waf:
          description: >
            Configuration for the AWS Web Application Firewall stack that is associated with this environment custom domain.  This is an automated system to counter SQL injection, XSS, and DDOS attacks.
          anyOf:
            - type: boolean
            - type: object
              additionalProperties: false
              properties:
                floodThreshold:
                  description: >
                    The maximum acceptable requests per 5 (five) minute period per IP address. Minimum value of 2000; defaults to 2000.
                  type: integer
                  minimum: 2000
                errorThreshold:
                  description: >
                    The maximum acceptable bad requests per minute per IP. Violating this causes the IP to be blocked for the given TTL. Defaults to 50.
                  type: integer
                  minimum: 0
                blockTTL:
                  description: >
                    The period, in minutes, to block applicable IP addresses.  Defaults to 240.
