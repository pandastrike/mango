// Generated by CoffeeScript 1.12.0
(function() {
  var _render, async, define, interview, join, randomWords, read, ref, ref1, safe_cp, safe_mkdir, shell, write;

  join = require("path").join;

  define = require("panda-9000").define;

  ref = require("fairmont"), async = ref.async, randomWords = ref.randomWords, read = ref.read, write = ref.write, shell = ref.shell;

  _render = require("panda-template");

  ref1 = require("./utils"), safe_cp = ref1.safe_cp, safe_mkdir = ref1.safe_mkdir;

  interview = require("./interview");

  define("init", async(function*() {
    var answers, config, e, questions, render, src, target;
    try {
      interview.setup();
      questions = [
        {
          name: "fairmont",
          description: "Add fairmont as a dependency to package.json? [Y/n]",
          "default": "Y"
        }, {
          name: "yaml",
          description: "Add js-yaml as a dependency to package.json? [Y/n]",
          "default": "Y"
        }
      ];
      console.log("Press ^C at any time to quit.");
      answers = (yield interview.ask(questions));
      if (answers.fairmont || answers.yaml) {
        console.log("\n Adding module(s). One moment...");
        if (answers.fairmont) {
          yield shell("npm install fairmont --save");
        }
        if (answers.yaml) {
          yield shell("npm install js-yaml --save");
        }
      }
      config = {
        projectID: (yield randomWords(6))
      };
      src = function(file) {
        return join(__dirname, "../init/" + file);
      };
      target = function(file) {
        return join(process.cwd(), file);
      };
      render = async(function*(src, target) {
        var output, template;
        template = (yield read(src));
        output = _render(template, config);
        return (yield write(target, output));
      });
      yield safe_cp(src("api.yaml"), target("api.yaml"));
      yield render(src("sky.yaml"), target("sky.yaml"));
      yield safe_mkdir(target("src"));
      yield render(src("sky.js"), target("src/sky.js"));
      yield render(src("s3.js"), target("src/s3.js"));
      return console.log("Panda Sky project initialized.");
    } catch (error) {
      e = error;
      return console.error(e.stack);
    }
  }));

}).call(this);
