// Generated by CoffeeScript 1.12.0
(function() {
  var AdmZip, Asset, async, define, exists, go, lift, pull, ref, ref1, render, rmrf, safe_mkdir, shell, tee, values, write, writeFileSync;

  writeFileSync = require("fs").writeFileSync;

  ref = require("fairmont"), go = ref.go, tee = ref.tee, pull = ref.pull, values = ref.values, async = ref.async, lift = ref.lift, shell = ref.shell, exists = ref.exists;

  ref1 = require("panda-9000"), define = ref1.define, write = ref1.write;

  rmrf = lift(require("rimraf"));

  AdmZip = require('adm-zip');

  render = (Asset = require("./asset")).render;

  safe_mkdir = require("./utils").safe_mkdir;

  define("build", ["survey"], async(function*(limit) {
    var e, source, target, zip;
    try {
      if (!(yield exists("package.json"))) {
        console.error("This project does not yet have a package.json. \nRun 'npm init' to initialize the project \nand then make sure all dependencies are listed.");
        process.exit();
      }
      yield rmrf("deploy");
      source = "src";
      target = "lib";
      yield rmrf(target);
      yield go([
        Asset.iterator(), tee(async(function*(formats) {
          return (yield go([values(formats), tee(render), pull, tee(write(target))]));
        }))
      ]);
      yield shell("npm install");
      zip = new AdmZip();
      zip.addLocalFolder("lib", "lib");
      if (!limit && (yield exists("node_modules"))) {
        zip.addLocalFolder("node_modules", "node_modules");
      }
      yield safe_mkdir("deploy");
      return zip.writeZip("deploy/package.zip");
    } catch (error) {
      e = error;
      return console.error(e.stack);
    }
  }));

}).call(this);
