// Generated by CoffeeScript 1.12.0
(function() {
  var last,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  last = require("fairmont").last;

  module.exports = function() {
    var fullyQualify, regularlyQualify, root;
    fullyQualify = function(name) {
      if (last(name) === ".") {
        return name;
      } else {
        return name + ".";
      }
    };
    regularlyQualify = function(name) {
      if (last(name) === ".") {
        return name.slice(0, -1);
      } else {
        return name;
      }
    };
    root = function(url) {
      var domain, e, terms;
      try {
        domain = url.split('/');
        domain = indexOf.call(url, "://") >= 0 ? domain[2] : domain[0];
        domain = domain.split(':')[0];
        terms = regularlyQualify(domain).split(".");
        terms = terms.slice(terms.length - 2);
        return fullyQualify(terms.join("."));
      } catch (error) {
        e = error;
        console.error("Failed to parse root url", e);
        throw new Error();
      }
    };
    return {
      fullyQualify: fullyQualify,
      regularlyQualify: regularlyQualify,
      root: root
    };
  };

}).call(this);
