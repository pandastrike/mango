// Generated by CoffeeScript 1.12.0
(function() {
  var AWS, async, awsPath, bind, homedir, isFunction, join, lift, liftModule, parseCreds, read, ref, task, where;

  join = require("path").join;

  homedir = require("os").homedir;

  AWS = require("aws-sdk");

  ref = require("fairmont"), async = ref.async, read = ref.read, isFunction = ref.isFunction, where = ref.where, lift = ref.lift;

  task = require("panda-9000").task;

  bind = function(o, f) {
    return f.bind(o);
  };

  liftModule = function(m) {
    var k, lifted, v;
    lifted = {};
    for (k in m) {
      v = m[k];
      lifted[k] = isFunction(v) ? lift(v.bind(m)) : v;
    }
    return lifted;
  };

  parseCreds = function(data) {
    var get, lines;
    lines = data.split("\n");
    get = function(line) {
      return line.split(/\s*=\s*/)[1];
    };
    where = function(phrase) {
      var i, j, ref1;
      for (i = j = 0, ref1 = lines.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
        if (lines[i].indexOf(phrase) >= 0) {
          return i;
        }
      }
    };
    return {
      id: get(lines[where("aws_access_key_id")]),
      key: get(lines[where("aws_secret_access_key")])
    };
  };

  awsPath = join(homedir(), ".aws", "credentials");

  module.exports = function(region) {
    var acm, cfo, cfr, gw, route53, s3;
    acm = liftModule(new AWS.ACM());
    gw = liftModule(new AWS.APIGateway());
    cfo = liftModule(new AWS.CloudFormation());
    cfr = liftModule(new AWS.CloudFront());
    route53 = liftModule(new AWS.Route53());
    s3 = liftModule(new AWS.S3());
    return {
      acm: acm,
      gw: gw,
      cfo: cfo,
      cfr: cfr,
      route53: route53,
      s3: s3
    };
  };

}).call(this);
