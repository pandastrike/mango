// Generated by CoffeeScript 1.12.0
(function() {
  var Asset, Method, Type, _assets, first, include, iterator, ref, values;

  ref = require("fairmont"), iterator = ref.iterator, values = ref.values, first = ref.first, Method = ref.Method, Type = ref.Type, include = ref.include;

  Asset = Type.define();

  _assets = {};

  include(Asset, {
    dictionary: _assets,
    iterator: function() {
      return iterator(values(_assets));
    },
    find: function(arg) {
      var extension, path, rx;
      path = arg.path, extension = arg.extension;
      if ((rx = _assets[path]) != null) {
        if (!extension) {
          return first(values(rx));
        } else {
          return rx[extension];
        }
      }
    },
    save: function(asset) {
      var name;
      if (_assets[name = asset.path] == null) {
        _assets[name] = {};
      }
      return _assets[asset.path][asset.target.extension] = asset;
    },
    render: Method.create()
  });

  module.exports = Asset;

}).call(this);
