{{gateway.name}}:
  {{#unless resource.rootResource}}
  {{#if dependencies}}
  DependsOn:
    {{#each dependencies}}
    - {{this}}
    {{/each}}
  {{/if}}
  {{/unless}}
  Type: "AWS::ApiGateway::Method"
  Properties:
    RestApiId:
      Ref: API
    {{#if @root.aws.cache.waf}}
    ApiKeyRequired: true
    {{/if}}
    ResourceId:
      "Fn::Select": [ {{index}}, {"Fn::Split": [ ",", {"Ref": ResourceIDs} ]}]
    {{#if authorizationType}}
    AuthorizationType: {{authorizationType}}
    {{else}}
    AuthorizationType: NONE
    {{/if}}
    {{#if authorizerId}}
    AuthorizerId: {{authorizerId}}
    {{/if}}
    HttpMethod: {{name}}
    {{#if requestModel}}
    RequestModels:
      "application/json": {{requestModel}}
    {{/if}}
    {{#if parameters}}
    RequestParameters:
    {{#each parameters}}
    {{#if path}}
      "method.request.path.{{name}}": true
    {{else}}
      "method.request.querystring.{{name}}": true
    {{/if}}
    {{/each}}
    {{/if}}
    Integration:
      Type: AWS
      IntegrationHttpMethod: POST
      {{#unless parameters}}
      PassthroughBehavior: WHEN_NO_MATCH
      {{/unless}}
      Uri:
        "Fn::Join":
          - ""
          -
            - "arn:aws:apigateway:"
            - {"Ref": "AWS::Region"}
            - ":lambda:path/2015-03-31/functions/"
            - {{lambda.function.arn}}
            - "/invocations"
      RequestTemplates:
        "application/json": >
          {
            "url": {
              "path": {
                #foreach($param in $input.params().path.keySet())
                "$param": "$util.escapeJavaScript($input.params().path.get($param))"
                #if($foreach.hasNext),#end
                #end
              },
              "query": {
                #foreach($param in $input.params().querystring.keySet())
                "$param": "$util.escapeJavaScript($input.params().querystring.get($param))"
                #if($foreach.hasNext),#end
                #end
              }
            },
            "method": "$context.httpMethod",
            "headers": {
              #foreach($param in $input.params().header.keySet())
              "$param": "$util.escapeJavaScript($input.params().header.get($param))"
              #if($foreach.hasNext),#end
              #end
            },
            "content" : $input.json('$')
          }



      IntegrationResponses:
      {{#each IntegrationResponses}}
        - StatusCode: {{StatusCode}}
        {{#if SelectionPattern}}
          SelectionPattern: {{SelectionPattern}}
        {{/if}}
        {{#if headers}}
          ResponseParameters:
          {{#eachProperty headers}}
            method.response.header.{{key}}: "{{value}}"
          {{/eachProperty}}
        {{/if}}

        {{#if ResponseTemplates}}
          ResponseTemplates:
          {{#eachProperty ResponseTemplates}}
            {{key}}: "{{value}}"
          {{/eachProperty}}
        {{/if}}

      {{/each}}

    MethodResponses:
    {{#each MethodResponses}}
      - StatusCode: {{StatusCode}}
      {{#if headers}}
        ResponseParameters:
        {{#eachProperty headers}}
          method.response.header.{{key}}: {{value}}
        {{/eachProperty}}
      {{/if}}
    {{/each}}
